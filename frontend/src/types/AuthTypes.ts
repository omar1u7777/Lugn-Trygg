// 游늷 Definiera till친tna anv칛ndarroller
export const USER_ROLES = ["user", "admin"] as const;
export type UserRole = (typeof USER_ROLES)[number];

// 游늷 Definiera en typ f칬r anv칛ndarobjekt
export type User = {
  user_id: string;            // 游댳 Unik identifierare (ska matcha backend)
  email: string;              // 游댳 Anv칛ndarens e-postadress
  name?: string;              // 游댳 (Valfritt) Fullst칛ndigt namn
  role?: UserRole;            // 游댳 Anv칛ndarroll (default: "user")
  createdAt?: Date | string;  // 游댳 Konto skapat (kan vara undefined)
  updatedAt?: Date | string;  // 游댳 Senaste uppdatering av kontot (kan vara undefined)
  avatarUrl?: string;         // 游댳 (Valfritt) URL till profilbild
  isActive?: boolean;         // 游댳 Om kontot 칛r aktivt (default: true)
  lastLogin?: Date | string;  // 游댳 Senaste inloggningsdatum (kan vara undefined)
};

// 游늷 Definiera en typ f칬r autentiseringssvar fr친n backend
export type AuthResponse = {
  user: User;                  // 游댳 Anv칛ndardata som returneras fr친n backend
  access_token: string;        // 游댳 JWT-token f칬r autentisering
  expires_in: number;          // 游댳 Antal sekunder innan token g친r ut (inte valfritt l칛ngre)
};

// 游늷 Definiera en generisk typ f칬r API-svar
export type ApiResponse<T> = {
  success: boolean;            // 游댳 Om f칬rfr친gan lyckades (true/false)
  statusCode: number;          // 游댳 HTTP-statuskod (ex: 200, 400, 500)
  message?: string;            // 游댳 Eventuellt meddelande fr친n servern
  data?: T;                    // 游댳 Generisk data som returneras
  error?: string;              // 游댳 Eventuellt felmeddelande fr친n servern
  headers?: Record<string, string>; // 游댳 Extra headers (t.ex. Rate-Limit info)
};

// 游늷 Definiera en typ f칬r API-fel
export type ApiError = {
  statusCode: number;          // 游댳 HTTP-statuskod (ex: 400, 401, 500)
  message: string;             // 游댳 Felmeddelande fr친n servern
  details?: Record<string, any>; // 游댳 (Valfritt) Ytterligare detaljer om felet
};

// 游늷 Definiera typen f칬r autentiseringskontext
export type AuthContextProps = {
  user: User | null;               // 游댳 Inloggad anv칛ndare eller null om ej inloggad
  setUser: (user: User | null) => void; // 游댳 Funktion f칬r att uppdatera anv칛ndaren
  token: string | null;            // 游댳 JWT-token eller null om ej inloggad
  setToken: (token: string | null) => void; // 游댳 Funktion f칬r att uppdatera token
  isLoggedIn: () => boolean;       // 游댳 Funktion som returnerar true om anv칛ndaren 칛r inloggad
  login: (accessToken: string, email: string, user_id: string) => void; // 游댳 Hanterar inloggning
  logout: () => Promise<void>;      // 游댳 Hanterar utloggning
};
